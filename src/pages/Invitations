import React, { useEffect, useState } from 'react';
import { Grid, Typography, Button } from '@mui/material';
import { useAuth } from "../firebase/firebaseAuth";
import { FetchInvitationsForDistributor, AcceptInvitation, DeclineInvitation } from "../firebase/firebaseFirestore";

const Invitations = () => {
  const { currentUser } = useAuth();
  const distributorID = currentUser.uid;

  const [invitations, setInvitations] = useState([]);

  useEffect(() => {
    const fetchInvitations = async () => {
      try {
        const invitationsData = await FetchInvitationsForDistributor(distributorID);
        setInvitations(invitationsData);
      } catch (error) {
        console.error('Error fetching invitations:', error);
      }
    };

    fetchInvitations();
  }, [distributorID]);

  const handleAccept = async (storeID) => {
    try {
      await AcceptInvitation(distributorID, storeID);
      setInvitations(invitations.filter(invitation => invitation.id !== storeID));
    } catch (error) {
      console.error('Error accepting invitation:', error);
    }
  };

  const handleDecline = async (storeID) => {
    try {
      await DeclineInvitation(distributorID, storeID);
      setInvitations(invitations.filter(invitation => invitation.id !== storeID));
    } catch (error) {
      console.error('Error declining invitation:', error);
    }
  };

  return (
    <Grid container spacing={2}>
      <Grid item xs={12}>
        <Typography variant="h2" gutterBottom>
          Invitations
        </Typography>
      </Grid>
      <Grid item xs={12}>
        {invitations.length > 0 ? (
          invitations.map(invitation => (
            <div key={invitation.id}>
              <Typography variant="subtitle1">
                You have received an invitation from Store ID: {invitation.id}
              </Typography>
              <Button variant="contained" color="primary" onClick={() => handleAccept(invitation.id)}>
                Accept
              </Button>
              <Button variant="contained" color="secondary" onClick={() => handleDecline(invitation.id)}>
                Decline
              </Button>
            </div>
          ))
        ) : (
          <Typography variant="body1">
            You have no pending invitations.
          </Typography>
        )}
      </Grid>
    </Grid>
  );
};

export default Invitations;
